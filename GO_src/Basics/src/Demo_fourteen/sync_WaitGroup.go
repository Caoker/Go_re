/*******************************************************
 *	                       _oo0oo_
 *	                      o8888888o
 *	                      88" . "88
 *	                      (| -_- |)
 *	                      0\  =  /0
 *	                    ___/`---'\___
 *	                  .' \\|     |// '.
 *	                 / \\|||  :  |||// \
 *	                / _||||| -:- |||||- \
 *	               |   | \\\  - /// |   |
 *	               | \_|  ''\---/''  |_/ |
 *	               \  .-\__  '-'  ___/-. /
 *	             ___'. .'  /--.--\  `. .'___
 *	          ."" '<  `.___\_<|>_/___.' >' "".
 *	         | | :  `- \`.;`\ _ /`;.`/ - ` : | |
 *	         \  \ `_.   \_ __\ /__ _/   .-` /  /
 *	     =====`-.____`.___ \_____/___.-`___.-'=====
 *	                       `=---='
 *
 *
 *	     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 *
 *	           佛祖保佑     永不宕机     永无BUG
 *
 *	Author       : Mr.Chan
 *	Date         : 2022-08-29 10:41:37
 *	LastEditors  : Mr.Chan
 *	LastEditTime : 2022-08-29 10:48:14
 *	FilePath     : /vivianchan.cn/Basics/src/Demo_fourteen/sync_WaitGroup.go
 *******************************************************/

package main

import (
	"fmt"
	"sync"
)

//声明WaitGroup用于等待一组线程的结束
var (
	wg sync.WaitGroup
)

func printI(i int) {
	// defer wg.Add(-1)  和下面效果一样，每运行一次减少一个线程数
	defer wg.Done()
	fmt.Println(i)
}

func main() {
	// 启动十个协程
	for i := 1; i <= 10; i++ {
		// 每循环一次增加一个线程数
		wg.Add(1)
		go printI(i)
	}

	// 等待counter归零后结束，即所有协程结束
	wg.Wait()

	fmt.Println("End。")
}
